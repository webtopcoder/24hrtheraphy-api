"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlockSettingDto = exports.PerformerDto = void 0;
const lodash_1 = require("lodash");
const file_1 = require("../../file");
class PerformerDto {
    constructor(data) {
        this.isPerformer = true;
        Object.assign(this, (0, lodash_1.pick)(data, [
            '_id',
            'name',
            'firstName',
            'lastName',
            'name',
            'username',
            'email',
            'phone',
            'phoneCode',
            'status',
            'avatarId',
            'avatarPath',
            'bankTransferOption',
            'directDeposit',
            'maxParticipantsAllowed',
            'paxum',
            'bitpay',
            'streamingStatus',
            'streamingTitle',
            'idVerificationId',
            'idVerification',
            'documentVerificationId',
            'documentVerification',
            'releaseFormId',
            'releaseForm',
            'gender',
            'country',
            'city',
            'state',
            'zipcode',
            'address',
            'languages',
            'tags',
            'studioId',
            'categoryIds',
            'categories',
            'schedule',
            'timezone',
            'noteForUser',
            'createdBy',
            'createdAt',
            'updatedAt',
            'eyes',
            'height',
            'weight',
            'bio',
            'sexualReference',
            'hair',
            'pubicHair',
            'ethnicity',
            'aboutMe',
            'bust',
            'dateOfBirth',
            'balance',
            'isPerformer',
            'emailVerified',
            'isOnline',
            'watching',
            'onlineAt',
            'offlineAt',
            'isStreaming',
            'isFavorite',
            'isBlocked',
            'socials',
            'stats',
            'commissionSetting',
            'privateCallPrice',
            'groupCallPrice',
            'lastStreamingTime',
            'studioInfo'
        ]));
    }
    toResponse(includePrivateInfo = false) {
        const publicInfo = {
            _id: this._id,
            avatar: file_1.FileDto.getPublicUrl(this.avatarPath),
            username: this.username,
            dateOfBirth: this.dateOfBirth,
            phone: this.phone,
            isOnline: this.isOnline,
            watching: this.watching,
            gender: this.gender,
            isStreaming: this.isStreaming,
            isFavorite: this.isFavorite,
            socials: this.socials,
            stats: this.stats,
            lastStreamingTime: this.lastStreamingTime,
            streamingStatus: this.streamingStatus,
            streamingTitle: this.streamingTitle,
            country: this.country,
            city: this.city,
            state: this.state,
            zipcode: this.zipcode,
            address: this.address,
            languages: this.languages,
            categoryIds: this.categoryIds,
            categories: this.categories,
            tags: this.tags,
            aboutMe: this.aboutMe,
            isBlocked: this.isBlocked,
            privateCallPrice: this.privateCallPrice,
            groupCallPrice: this.groupCallPrice,
            offlineAt: this.offlineAt
        };
        const privateInfo = {
            email: this.email,
            phone: this.phone,
            phoneCode: this.phoneCode,
            status: this.status,
            name: this.getName(),
            firstName: this.firstName,
            lastName: this.lastName,
            city: this.city,
            state: this.state,
            zipcode: this.zipcode,
            address: this.address,
            languages: this.languages,
            idVerificationId: this.idVerificationId,
            documentVerificationId: this.documentVerificationId,
            documentVerification: this.documentVerification,
            releaseFormId: this.releaseFormId,
            releaseForm: this.releaseForm,
            idVerification: this.idVerification,
            schedule: this.schedule,
            timezone: this.timezone,
            noteForUser: this.noteForUser,
            bankTransferOption: this.bankTransferOption,
            directDeposit: this.directDeposit,
            paxum: this.paxum,
            bitpay: this.bitpay,
            height: this.height,
            weight: this.weight,
            bio: this.bio,
            eyes: this.eyes,
            sexualReference: this.sexualReference,
            hair: this.hair,
            aboutMe: this.aboutMe,
            pubicHair: this.pubicHair,
            bust: this.bust,
            ethnicity: this.ethnicity,
            tags: this.tags,
            monthlyPrice: this.monthlyPrice,
            yearlyPrice: this.yearlyPrice,
            stats: this.stats,
            balance: this.balance,
            isPerformer: this.isPerformer,
            createdAt: this.createdAt,
            updatedAt: this.updatedAt,
            emailVerified: this.emailVerified,
            onlineAt: this.onlineAt,
            offlineAt: this.offlineAt,
            privateCallPrice: this.privateCallPrice,
            groupCallPrice: this.groupCallPrice,
            maxParticipantsAllowed: this.maxParticipantsAllowed,
            commissionSetting: this.commissionSetting,
            studioId: this.studioId,
            studioInfo: this.studioInfo
        };
        if (!includePrivateInfo) {
            return publicInfo;
        }
        return Object.assign(Object.assign({}, publicInfo), privateInfo);
    }
    getName() {
        if (this.name)
            return this.name;
        return [this.firstName || '', this.lastName || ''].join(' ').trim();
    }
    toSearchResponse() {
        return {
            _id: this._id,
            avatar: file_1.FileDto.getPublicUrl(this.avatarPath),
            username: this.username,
            gender: this.gender,
            languages: this.languages,
            tags: this.tags,
            streamingStatus: this.streamingStatus,
            streamingTitle: this.streamingTitle,
            aboutMe: this.aboutMe,
            isFavorite: this.isFavorite,
            isBlocked: this.isBlocked,
            isStreaming: this.isStreaming,
            isOnline: this.isOnline,
            watching: this.watching,
            lastStreamingTime: this.lastStreamingTime,
            privateCallPrice: this.privateCallPrice,
            groupCallPrice: this.groupCallPrice,
            categoryIds: this.categoryIds,
            categories: this.categories,
            stats: this.stats,
            dateOfBirth: this.dateOfBirth,
            offlineAt: this.offlineAt
        };
    }
    toPublicDetailsResponse() {
        return {
            _id: this._id,
            avatar: file_1.FileDto.getPublicUrl(this.avatarPath),
            username: this.username,
            status: this.status,
            gender: this.gender,
            country: this.country,
            streamingStatus: this.streamingStatus,
            streamingTitle: this.streamingTitle,
            city: this.city,
            state: this.state,
            zipcode: this.zipcode,
            address: this.address,
            languages: this.languages,
            categoryIds: this.categoryIds,
            categories: this.categories,
            schedule: this.schedule,
            timezone: this.timezone,
            noteForUser: this.noteForUser,
            height: this.height,
            weight: this.weight,
            bio: this.bio,
            eyes: this.eyes,
            tags: this.tags,
            hair: this.hair,
            aboutMe: this.aboutMe,
            pubicHair: this.pubicHair,
            bust: this.bust,
            ethnicity: this.ethnicity,
            sexualReference: this.sexualReference,
            monthlyPrice: this.monthlyPrice,
            yearlyPrice: this.yearlyPrice,
            stats: this.stats,
            createdAt: this.createdAt,
            updatedAt: this.updatedAt,
            dateOfBirth: this.dateOfBirth,
            isOnline: this.isOnline,
            watching: this.watching,
            isStreaming: this.isStreaming,
            isFavorite: this.isFavorite,
            isBlocked: this.isBlocked,
            socials: this.socials,
            privateCallPrice: this.privateCallPrice,
            groupCallPrice: this.groupCallPrice,
            maxParticipantsAllowed: this.maxParticipantsAllowed,
            onlineAt: this.onlineAt,
            offlineAt: this.offlineAt,
            lastStreamingTime: this.lastStreamingTime
        };
    }
}
exports.PerformerDto = PerformerDto;
class BlockSettingDto {
    constructor(data) {
        Object.assign(this, (0, lodash_1.pick)(data, [
            '_id',
            'performerId',
            'countries',
            'userIds',
            'usersInfo',
            'createdAt',
            'updatedAt'
        ]));
    }
}
exports.BlockSettingDto = BlockSettingDto;
//# sourceMappingURL=performer.dto.js.map